package com.example.accessingdatamysql.org;


import com.example.accessingdatamysql.myorg.OrgRosterRepository;
import com.example.accessingdatamysql.myorg.OrganizationRoster;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;

@CrossOrigin
@RestController // This means that this class is a Controller
@RequestMapping(path="/organization") // This means URL's start with /demo (after Application path)
public class OrgController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private OrgRepository orgRepository;

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private OrgRosterRepository orgRosterRepository;

    @PostMapping(path = "/add") // Map ONLY POST Requests
    @ResponseBody
    public Organization addJsonOrg(@RequestBody Organization org) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        Organization org2 = orgRepository.save(org);
        OrganizationRoster orgRoster = new OrganizationRoster(org2.getOwnerEmail(), org2.getOrgId(), OrganizationRoster.Type.OWNER);
        orgRosterRepository.save(orgRoster);
        return org;
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<Organization> getAllOrgs() {
        // This returns a JSON or XML with the users
        return orgRepository.findAll();
    }

}
